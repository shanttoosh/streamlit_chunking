[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chunking-batch-processing"
version = "2.0.0"
description = "Advanced text chunking and embedding system with multiple processing modes"
authors = [
    {name = "Chunk Optimizer Team", email = "team@chunkoptimizer.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Text Processing :: General",
]

dependencies = [
    "pandas>=2.0.0",
    "numpy>=1.24.0",
    "scikit-learn>=1.3.0",
    "fastapi>=0.104.0",
    "uvicorn>=0.24.0",
    "python-multipart>=0.0.6",
    "streamlit>=1.28.0",
    "chromadb>=0.4.15",
    "faiss-cpu>=1.7.4",
    "sentence-transformers>=2.2.2",
    "transformers>=4.35.0",
    "torch>=2.0.0",
    "openai>=1.3.0",
    "tiktoken>=0.5.0",
    "nltk>=3.8.0",
    "langchain>=0.0.350",
    "langchain-text-splitters>=0.0.1",
    "textblob>=0.17.1",
    "mysql-connector-python>=8.1.0",
    "psycopg2-binary>=2.9.7",
    "sqlalchemy>=2.0.0",
    "psutil>=5.9.0",
    "pympler>=1.0.1",
    "python-magic>=0.4.27",
    "chardet>=5.2.0",
    "python-dotenv>=1.0.0",
    "requests>=2.31.0",
    "aiohttp>=3.9.0",
    "httpx>=0.25.0",
    "redis>=5.0.0",
    "pickle5>=0.0.11",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
    "tqdm>=4.65.0",
    "colorama>=0.4.6",
    "loguru>=0.7.0",
    "Jinja2>=3.1.0",
    "MarkupSafe>=2.1.0",
    "spacy>=3.7.0",
    "beautifulsoup4>=4.12.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/chunkoptimizer/chunking-batch-processing"
Documentation = "https://chunkoptimizer.readthedocs.io"
Repository = "https://github.com/chunkoptimizer/chunking-batch-processing"
Issues = "https://github.com/chunkoptimizer/chunking-batch-processing/issues"

[project.scripts]
chunk-optimizer-api = "run_api:main"
chunk-optimizer-ui = "run_ui:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
